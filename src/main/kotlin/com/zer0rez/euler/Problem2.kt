package com.zer0rez.euler

import java.io.PrintStream

/**
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */
// https://projecteuler.net/problem=2
class Problem2 : Problem {
    override fun solve(out: PrintStream) {
        var values = ArrayList<Int>()
        values.add(1)
        values.add(2)
        while (values.last() < 4000000) {
            values.add(values[values.count()-1] + values[values.count()-2])
        }
        values.remove(values.last())
        val filtered = values.filter { it % 2 == 0 }
//            .filterIndexed { index, value -> index % 2 == 0 }.sum()

        out.println("Problem 2: [${filtered.joinToString(", ")}] : ${filtered.sum()}")
    }
}